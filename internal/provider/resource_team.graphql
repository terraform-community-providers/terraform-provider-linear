# @genqlient(for: "Team.description", pointer: true)
# @genqlient(for: "Team.icon", pointer: true)
# @genqlient(for: "Team.color", pointer: true)
# @genqlient(for: "Team.autoClosePeriod", pointer: true)
fragment Team on Team {
  id
  name
  key
  private
  description
  icon
  color
  timezone
  groupIssueHistory
  setIssueSortOrderOnStateChange
  aiThreadSummariesEnabled
  autoArchivePeriod
  autoClosePeriod
  autoCloseParentIssues
  autoCloseChildIssues
  triageEnabled
  requirePriorityToLeaveTriage
  cyclesEnabled
  cycleStartDay
  cycleDuration
  cycleCooldownTime
  upcomingCycleCount
  cycleIssueAutoAssignStarted
  cycleIssueAutoAssignCompleted
  cycleLockToActive
  issueEstimationType
  issueEstimationAllowZero
  issueEstimationExtended
  defaultIssueEstimate
}

query getTeam($key: String!) {
  team(id: $key) {
    ...Team
  }
}

# @genqlient(for: "TeamCreateInput.id", omitempty: true)
# @genqlient(for: "TeamCreateInput.description", pointer: true)
# @genqlient(for: "TeamCreateInput.icon", omitempty: true, pointer: true)
# @genqlient(for: "TeamCreateInput.color", omitempty: true, pointer: true)
# @genqlient(for: "TeamCreateInput.autoClosePeriod", pointer: true)
# @genqlient(for: "TeamCreateInput.parentId", omitempty: true, pointer: true)
# @genqlient(for: "TeamCreateInput.defaultTemplateForMembersId", omitempty: true)
# @genqlient(for: "TeamCreateInput.defaultTemplateForNonMembersId", omitempty: true)
# @genqlient(for: "TeamCreateInput.defaultProjectTemplateId", omitempty: true)
# @genqlient(for: "TeamCreateInput.markedAsDuplicateWorkflowStateId", omitempty: true)
# @genqlient(for: "TeamCreateInput.autoCloseStateId", omitempty: true)
# @genqlient(for: "TeamCreateInput.productIntelligenceScope", omitempty: true)
mutation createTeam(
  $input: TeamCreateInput!
) {
  teamCreate(input: $input) {
    team {
      ...Team
    }
  }
}

# @genqlient(for: "TeamUpdateInput.key", omitempty: true)
# @genqlient(for: "TeamUpdateInput.name", omitempty: true)
# @genqlient(for: "TeamUpdateInput.description", pointer: true)
# @genqlient(for: "TeamUpdateInput.icon", omitempty: true, pointer: true)
# @genqlient(for: "TeamUpdateInput.color", omitempty: true, pointer: true)
# @genqlient(for: "TeamUpdateInput.autoClosePeriod", pointer: true)
# @genqlient(for: "TeamUpdateInput.defaultIssueStateId", omitempty: true)
# @genqlient(for: "TeamUpdateInput.parentId", omitempty: true, pointer: true)
# @genqlient(for: "TeamUpdateInput.cycleEnabledStartDate", omitempty: true, pointer: true)
# @genqlient(for: "TeamUpdateInput.defaultTemplateForMembersId", omitempty: true)
# @genqlient(for: "TeamUpdateInput.defaultTemplateForNonMembersId", omitempty: true)
# @genqlient(for: "TeamUpdateInput.defaultProjectTemplateId", omitempty: true)
# @genqlient(for: "TeamUpdateInput.markedAsDuplicateWorkflowStateId", omitempty: true)
# @genqlient(for: "TeamUpdateInput.autoCloseStateId", omitempty: true)
# @genqlient(for: "TeamUpdateInput.productIntelligenceScope", omitempty: true)
mutation updateTeam(
  $input: TeamUpdateInput!,
  $id: String!
) {
  teamUpdate(input: $input, id: $id) {
    team {
      ...Team
    }
  }
}

mutation deleteTeam($key: String!) {
  teamDelete(id: $key) {
    success
  }
}
